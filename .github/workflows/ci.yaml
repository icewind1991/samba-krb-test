name: Build, test and push

on:
  pull_request:
  push:
    branches:
      - main
      - master
      - stable*

jobs:
  build-php:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ '7.4', '8.0', '8.1', '8.2' ]
        image:
          - apache
          - apache-gssapi
          - apache-fpm-gssapi
          - nginx-fpm-gssapi

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.image }}
          file: ./${{ matrix.image }}/Dockerfile
          tags: icewind1991/samba-krb-test-${{ matrix.image }}:${{ matrix.php-version }}
          outputs: type=docker,dest=/tmp/${{ matrix.image }}.tar
          build-args:
            PHP_VERSION=${{ matrix.php-version }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.image }}-${{ matrix.php-version }}
          path: /tmp/${{ matrix.image }}.tar

  build-other:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - client
          - dc

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.image }}
          file: ./${{ matrix.image }}/Dockerfile
          tags: icewind1991/samba-krb-test-${{ matrix.image }}:latest
          outputs: type=docker,dest=/tmp/${{ matrix.image }}.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.image }}
          path: /tmp/${{ matrix.image }}.tar

  test:
    runs-on: ubuntu-latest
    needs: [build-php, build-other]
    strategy:
      fail-fast: false
      matrix:
        php-version: [ '7.4', '8.0', '8.1', '8.2' ]
        variant:
          - "apache"
          - "apache-gssapi"
          - "apache-fpm-gssapi"
          - "nginx-fpm-gssapi"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Checkout smb
        uses: actions/checkout@v4
        with:
          repository: icewind1991/smb
          path: smb
      - name: Setup smb
        run: |
          cd smb
          composer i
          cd ..
      - name: Download dc image
        uses: actions/download-artifact@v4
        with:
          path: /tmp
          name: dc
      - name: Load DC image
        run: |
          docker load --input /tmp/dc.tar
      - name: Start DC
        run: |
          DC_IP=$(./start-dc.sh)
          echo "DC_IP=$DC_IP" >> "$GITHUB_ENV"
      - name: Download server image
        uses: actions/download-artifact@v4
        with:
          path: /tmp
          name: ${{ matrix.variant }}-${{ matrix.php-version }}
      - name: Download client image
        uses: actions/download-artifact@v4
        with:
          path: /tmp
          name: client
      - name: Load Docker images
        run: |
          docker load --input /tmp/${{ matrix.variant }}.tar
          docker load --input /tmp/client.tar
          docker image ls -a
      - name: Run smb kerberos SSO
        run: |
          echo "DC: $DC_IP"
          # start server
          SERVER_IP=$(./start-server.sh $DC_IP $PWD/smb ${{ matrix.variant }} ${{ matrix.php-version }})
          echo "SERVER: $SERVER_IP"
          
          docker ps -a

          LIST=$(./client-cmd.sh $DC_IP curl --negotiate -u testuser@DOMAIN.TEST: --delegation always http://httpd.domain.test/kerb/example-sso-kerberos.php)

          echo $LIST

          LIST=$(echo $LIST | tr -d '[:space:]')

          [[ $LIST == "test.txt" ]]

  push-php:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ '7.4', '8.0', '8.1', '8.2' ]
        image:
          - apache
          - apache-gssapi
          - apache-fpm-gssapi
          - nginx-fpm-gssapi
    needs: test

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: icewind1991
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Download ${{ matrix.image }} image
        uses: actions/download-artifact@v4
        with:
          path: /tmp
          name: ${{ matrix.image }}-${{ matrix.php-version }}
      - name: Load ${{ matrix.image }} image
        run: |
          docker load --input /tmp/${{ matrix.image }}.tar
      - name: Push ${{ matrix.image }}:${{ matrix.php-version }} image
        run: |
          docker push icewind1991/samba-krb-test-${{ matrix.image }}:${{ matrix.php-version }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push ${{ matrix.image }}:${{ matrix.php-version }} image to ghcr.io
        run: |
          docker tag icewind1991/samba-krb-test-${{ matrix.image }}:${{ matrix.php-version }} ghcr.io/icewind1991/samba-krb-test-${{ matrix.image }}:${{ matrix.php-version }}
          docker push ghcr.io/icewind1991/samba-krb-test-${{ matrix.image }}:${{ matrix.php-version }}

  push-other:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - client
          - dc
    needs: test

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: icewind1991
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Download ${{ matrix.image }} image
        uses: actions/download-artifact@v4
        with:
          path: /tmp
          name: ${{ matrix.image }}
      - name: Load ${{ matrix.image }} image
        run: |
          docker load --input /tmp/${{ matrix.image }}.tar
      - name: Push ${{ matrix.image }} image
        run: |
          docker push icewind1991/samba-krb-test-${{ matrix.image }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push ${{ matrix.image }} image to ghcr.io
        run: |
          docker tag icewind1991/samba-krb-test-${{ matrix.image }} ghcr.io/icewind1991/samba-krb-test-${{ matrix.image }}
          docker push ghcr.io/icewind1991/samba-krb-test-${{ matrix.image }}